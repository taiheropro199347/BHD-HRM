// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace BHDHRMWebAPI.Models
{
    public partial class BHDHRMContext : DbContext
    {
        public BHDHRMContext()
        {
        }

        public BHDHRMContext(DbContextOptions<BHDHRMContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Area> Area { get; set; }
        public virtual DbSet<BhdAccount> BhdAccount { get; set; }
        public virtual DbSet<BhdGroup> BhdGroup { get; set; }
        public virtual DbSet<BhdRoles> BhdRoles { get; set; }
        public virtual DbSet<Chevrons> Chevrons { get; set; }
        public virtual DbSet<Error> Error { get; set; }
        public virtual DbSet<Logs> Logs { get; set; }
        public virtual DbSet<Luongtran> Luongtran { get; set; }
        public virtual DbSet<Modules> Modules { get; set; }
        public virtual DbSet<MyTable> MyTable { get; set; }
        public virtual DbSet<RefreshToken> RefreshToken { get; set; }
        public virtual DbSet<Table1> Table1 { get; set; }
        public virtual DbSet<Table2> Table2 { get; set; }
        public virtual DbSet<Table3> Table3 { get; set; }
        public virtual DbSet<TableTest1> TableTest1 { get; set; }
        public virtual DbSet<TableTest2> TableTest2 { get; set; }
        public virtual DbSet<Tb1> Tb1 { get; set; }
        public virtual DbSet<TblCapbac> TblCapbac { get; set; }
        public virtual DbSet<TblChamCong> TblChamCong { get; set; }
        public virtual DbSet<TblChamCongPt> TblChamCongPt { get; set; }
        public virtual DbSet<TblChucVu> TblChucVu { get; set; }
        public virtual DbSet<TblCongTy> TblCongTy { get; set; }
        public virtual DbSet<TblEmail> TblEmail { get; set; }
        public virtual DbSet<TblEmailConfig> TblEmailConfig { get; set; }
        public virtual DbSet<TblGiaDinh> TblGiaDinh { get; set; }
        public virtual DbSet<TblGroupUser> TblGroupUser { get; set; }
        public virtual DbSet<TblHopDong> TblHopDong { get; set; }
        public virtual DbSet<TblKhenThuongKyLuat> TblKhenThuongKyLuat { get; set; }
        public virtual DbSet<TblLogPoint> TblLogPoint { get; set; }
        public virtual DbSet<TblLuong> TblLuong { get; set; }
        public virtual DbSet<TblLuongKhac> TblLuongKhac { get; set; }
        public virtual DbSet<TblMenu> TblMenu { get; set; }
        public virtual DbSet<TblMenu1> TblMenu1 { get; set; }
        public virtual DbSet<TblNgayNghi> TblNgayNghi { get; set; }
        public virtual DbSet<TblNgayle> TblNgayle { get; set; }
        public virtual DbSet<TblNghiPhep> TblNghiPhep { get; set; }
        public virtual DbSet<TblNhanVien> TblNhanVien { get; set; }
        public virtual DbSet<TblNhanVienImg> TblNhanVienImg { get; set; }
        public virtual DbSet<TblPermissions> TblPermissions { get; set; }
        public virtual DbSet<TblPhong> TblPhong { get; set; }
        public virtual DbSet<TblPhucLoi> TblPhucLoi { get; set; }
        public virtual DbSet<TblQuaTrinhCongTac> TblQuaTrinhCongTac { get; set; }
        public virtual DbSet<TblQuaTrinhCongViec> TblQuaTrinhCongViec { get; set; }
        public virtual DbSet<TblQuaTrinhCongViecNew> TblQuaTrinhCongViecNew { get; set; }
        public virtual DbSet<TblQuaTrinhDaoTao> TblQuaTrinhDaoTao { get; set; }
        public virtual DbSet<TblQuaTrinhHocTap> TblQuaTrinhHocTap { get; set; }
        public virtual DbSet<TblScheduler> TblScheduler { get; set; }
        public virtual DbSet<TblSubMenu> TblSubMenu { get; set; }
        public virtual DbSet<TblSubMenu2> TblSubMenu2 { get; set; }
        public virtual DbSet<TblTaiSanCap> TblTaiSanCap { get; set; }
        public virtual DbSet<TblTangCa> TblTangCa { get; set; }
        public virtual DbSet<TblTapDoan> TblTapDoan { get; set; }
        public virtual DbSet<TblTroCap> TblTroCap { get; set; }
        public virtual DbSet<TblTrocaptrachnhiem> TblTrocaptrachnhiem { get; set; }
        public virtual DbSet<Thietlapbaohiem> Thietlapbaohiem { get; set; }
        public virtual DbSet<Thietlapthue> Thietlapthue { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Area>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateBy).HasMaxLength(256);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Name).HasMaxLength(100);

                entity.Property(e => e.UpdateBy).HasMaxLength(256);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<BhdAccount>(entity =>
            {
                entity.HasKey(e => e.UserAd)
                    .HasName("PK_BHD_ACCOUNT");

                entity.ToTable("BHD_Account");

                entity.Property(e => e.UserAd)
                    .HasMaxLength(50)
                    .HasColumnName("UserAD");

                entity.Property(e => e.CinemaId)
                    .HasColumnName("cinemaId")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.IdGroup).HasColumnName("idGroup");

                entity.Property(e => e.Login).HasMaxLength(50);

                entity.Property(e => e.Name).HasMaxLength(150);

                entity.Property(e => e.Pass).HasMaxLength(250);

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.TimeCreate).HasMaxLength(50);

                entity.Property(e => e.Token).HasMaxLength(500);

                entity.Property(e => e.UserNo).HasMaxLength(10);

                entity.HasOne(d => d.IdGroupNavigation)
                    .WithMany(p => p.BhdAccount)
                    .HasForeignKey(d => d.IdGroup)
                    .HasConstraintName("FK_BHD_Account_BHD_Group");
            });

            modelBuilder.Entity<BhdGroup>(entity =>
            {
                entity.ToTable("BHD_Group");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.TimeCreate)
                    .HasMaxLength(50)
                    .HasColumnName("timeCreate");

                entity.Property(e => e.TimeModify).HasMaxLength(50);

                entity.Property(e => e.UserCreate).HasMaxLength(50);

                entity.Property(e => e.UserEdit).HasMaxLength(50);
            });

            modelBuilder.Entity<BhdRoles>(entity =>
            {
                entity.ToTable("BHD_Roles");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.IdFn).HasColumnName("idFN");

                entity.Property(e => e.IdGr).HasColumnName("idGR");

                entity.Property(e => e.Idpermittype).HasMaxLength(50);

                entity.Property(e => e.TimeCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("timeCreate");

                entity.Property(e => e.TimeModify).HasColumnType("datetime");

                entity.Property(e => e.UserCreate)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UserEdit).HasMaxLength(50);

                entity.HasOne(d => d.IdFnNavigation)
                    .WithMany(p => p.BhdRoles)
                    .HasForeignKey(d => d.IdFn)
                    .HasConstraintName("FK_BHD_Roles_Modules");

                entity.HasOne(d => d.IdGrNavigation)
                    .WithMany(p => p.BhdRoles)
                    .HasForeignKey(d => d.IdGr)
                    .HasConstraintName("FK_BHD_Roles_BHD_Group");
            });

            modelBuilder.Entity<Chevrons>(entity =>
            {
                entity.HasKey(e => e.ChevronId)
                    .HasName("PK_ccl_Chevron");

                entity.Property(e => e.ChevronId).HasColumnName("ChevronID");

                entity.Property(e => e.CreateBy).HasMaxLength(100);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Name).HasMaxLength(100);

                entity.Property(e => e.UpdateBy).HasMaxLength(100);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<Error>(entity =>
            {
                entity.ToTable("ERROR");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Text).HasColumnName("text");

                entity.Property(e => e.TimeCreate)
                    .HasColumnType("datetime")
                    .HasColumnName("timeCreate");
            });

            modelBuilder.Entity<Logs>(entity =>
            {
                entity.HasKey(e => e.LogId);

                entity.Property(e => e.LogId).HasColumnName("LogID");

                entity.Property(e => e.ActionBy).HasMaxLength(100);

                entity.Property(e => e.ActionDate).HasColumnType("datetime");

                entity.Property(e => e.IpAdress)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModuleId).HasColumnName("ModuleID");

                entity.Property(e => e.ModuleName).HasMaxLength(100);

                entity.HasOne(d => d.Module)
                    .WithMany(p => p.Logs)
                    .HasForeignKey(d => d.ModuleId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK_Logs_Modules");
            });

            modelBuilder.Entity<Luongtran>(entity =>
            {
                entity.ToTable("luongtran");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Ghichu).HasColumnName("ghichu");

                entity.Property(e => e.LuongBhxh).HasColumnName("luongBHXH");

                entity.Property(e => e.Luongbhtn).HasColumnName("luongbhtn");

                entity.Property(e => e.Luongbhyt).HasColumnName("luongbhyt");

                entity.Property(e => e.Maluong)
                    .HasMaxLength(50)
                    .HasColumnName("maluong");

                entity.Property(e => e.Muctoithieu).HasColumnName("muctoithieu");

                entity.Property(e => e.Ngayhieuluc)
                    .HasColumnType("date")
                    .HasColumnName("ngayhieuluc");
            });

            modelBuilder.Entity<Modules>(entity =>
            {
                entity.HasKey(e => e.ModuleId);

                entity.Property(e => e.ModuleId).HasColumnName("ModuleID");

                entity.Property(e => e.CreateBy).HasMaxLength(100);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.Image).HasMaxLength(150);

                entity.Property(e => e.ModuleUrl).HasMaxLength(500);

                entity.Property(e => e.Name).HasMaxLength(100);

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.UpdateBy).HasMaxLength(100);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<MyTable>(entity =>
            {
                entity.Property(e => e.MytableId)
                    .ValueGeneratedNever()
                    .HasColumnName("mytable_id");
            });

            modelBuilder.Entity<RefreshToken>(entity =>
            {
                entity.HasKey(e => e.TokenId)
                    .HasName("PK_tblRefreshToken");

                entity.Property(e => e.TokenId).HasColumnName("token_id");

                entity.Property(e => e.ExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("expiry_date");

                entity.Property(e => e.Token)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("token");

                entity.Property(e => e.UserId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.RefreshTokens)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_RefreshToken_BHD_Account");
            });

            modelBuilder.Entity<Table1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Table_1");

                entity.Property(e => e.Emails)
                    .HasMaxLength(500)
                    .HasColumnName("emails");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Phone)
                    .HasMaxLength(500)
                    .HasColumnName("phone");
            });

            modelBuilder.Entity<Table2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Table_2");

                entity.Property(e => e.Emails)
                    .HasMaxLength(500)
                    .HasColumnName("emails");

                entity.Property(e => e.IdCard)
                    .HasMaxLength(50)
                    .HasColumnName("idCard");
            });

            modelBuilder.Entity<Table3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Table_3");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .HasColumnName("name");
            });

            modelBuilder.Entity<TableTest1>(entity =>
            {
                entity.ToTable("Table_test1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Diem)
                    .HasMaxLength(150)
                    .HasColumnName("diem");

                entity.Property(e => e.MaNv)
                    .HasMaxLength(150)
                    .HasColumnName("MaNV");

                entity.Property(e => e.Ten).HasMaxLength(150);
            });

            modelBuilder.Entity<TableTest2>(entity =>
            {
                entity.ToTable("Table_test2");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Diem)
                    .HasMaxLength(150)
                    .HasColumnName("diem");

                entity.Property(e => e.MaNv)
                    .HasMaxLength(150)
                    .HasColumnName("MaNV");

                entity.Property(e => e.Ten).HasMaxLength(150);
            });

            modelBuilder.Entity<Tb1>(entity =>
            {
                entity.ToTable("tb1");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber).HasMaxLength(50);

                entity.Property(e => e.HoTen).HasMaxLength(150);
            });

            modelBuilder.Entity<TblCapbac>(entity =>
            {
                entity.ToTable("tblCapbac");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Ghichu).HasMaxLength(250);

                entity.Property(e => e.Macapbac).HasMaxLength(50);

                entity.Property(e => e.Ngaytao).HasColumnType("date");

                entity.Property(e => e.Nguoitao).HasMaxLength(250);

                entity.Property(e => e.Tencapbac).HasMaxLength(150);
            });

            modelBuilder.Entity<TblChamCong>(entity =>
            {
                entity.HasKey(e => new { e.CardNumber, e.Ngay })
                    .HasName("PK_TblChamCong");

                entity.ToTable("tblChamCong");

                entity.Property(e => e.CardNumber).HasMaxLength(50);

                entity.Property(e => e.Ngay).HasColumnType("date");

                entity.Property(e => e.NgayCong).HasMaxLength(50);
            });

            modelBuilder.Entity<TblChamCongPt>(entity =>
            {
                entity.HasKey(e => new { e.CardNumber, e.Thang });

                entity.ToTable("tblChamCongPT");

                entity.Property(e => e.CardNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Thang).HasColumnType("date");

                entity.Property(e => e.Amcu)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("AMcu");

                entity.Property(e => e.Ammoi)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("AMmoi");

                entity.Property(e => e.GioTraining).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.LuongCu).HasColumnType("money");

                entity.Property(e => e.LuongMoi).HasColumnType("money");

                entity.Property(e => e.LuongTraining).HasColumnType("money");

                entity.Property(e => e.PhuCapKhac).HasColumnType("money");

                entity.Property(e => e.Pmcu)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PMcu");

                entity.Property(e => e.Pmmoi)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PMmoi");

                entity.Property(e => e.ThueTncn)
                    .HasColumnType("money")
                    .HasColumnName("ThueTNCN");

                entity.Property(e => e.Thuong).HasColumnType("money");
            });

            modelBuilder.Entity<TblChucVu>(entity =>
            {
                entity.ToTable("tblChucVu");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.TenChucVu).HasMaxLength(50);
            });

            modelBuilder.Entity<TblCongTy>(entity =>
            {
                entity.ToTable("tblCongTy");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.AreaId).HasColumnName("AreaID");

                entity.Property(e => e.DiaChi).HasMaxLength(500);

                entity.Property(e => e.IdtapDoan)
                    .HasMaxLength(50)
                    .HasColumnName("IDTapDoan");

                entity.Property(e => e.SoDt)
                    .HasMaxLength(50)
                    .HasColumnName("SoDT");

                entity.Property(e => e.TenCongTy).HasMaxLength(500);

                entity.Property(e => e.TinhTrang).HasMaxLength(50);

                entity.HasOne(d => d.Area)
                    .WithMany(p => p.TblCongTy)
                    .HasForeignKey(d => d.AreaId)
                    .HasConstraintName("FK_tblCongTy_Area");
            });

            modelBuilder.Entity<TblEmail>(entity =>
            {
                entity.HasKey(e => e.EmailServerSettingId);

                entity.ToTable("tblEmail");

                entity.Property(e => e.EmailServerSettingId).HasColumnName("EmailServerSettingID");

                entity.Property(e => e.CreateBy).HasMaxLength(100);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.MailAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MailBcc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MailBCC");

                entity.Property(e => e.MailCc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MailCC");

                entity.Property(e => e.MailImap)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MailIMAP");

                entity.Property(e => e.MailSmtp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MailSMTP");

                entity.Property(e => e.Password)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PortMailImap).HasColumnName("PortMailIMAP");

                entity.Property(e => e.PortMailSmtp).HasColumnName("PortMailSMTP");

                entity.Property(e => e.Ssl).HasColumnName("SSL");

                entity.Property(e => e.UpdateBy).HasMaxLength(100);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TblEmailConfig>(entity =>
            {
                entity.HasKey(e => e.EmailServerSettingId);

                entity.ToTable("tblEmailConfig");

                entity.Property(e => e.EmailServerSettingId).HasColumnName("EmailServerSettingID");

                entity.Property(e => e.CreateBy).HasMaxLength(100);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.MailAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MailBcc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MailBCC");

                entity.Property(e => e.MailCc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MailCC");

                entity.Property(e => e.MailImap)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MailIMAP");

                entity.Property(e => e.MailSmtp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MailSMTP");

                entity.Property(e => e.Password)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PortMailImap).HasColumnName("PortMailIMAP");

                entity.Property(e => e.PortMailSmtp).HasColumnName("PortMailSMTP");

                entity.Property(e => e.Ssl).HasColumnName("SSL");

                entity.Property(e => e.UpdateBy).HasMaxLength(100);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TblGiaDinh>(entity =>
            {
                entity.ToTable("tblGiaDinh");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.GioiTinh).HasMaxLength(50);

                entity.Property(e => e.HoTen).HasMaxLength(50);

                entity.Property(e => e.MaSoThuePhuThuoc).HasMaxLength(50);

                entity.Property(e => e.NgaySinh).HasColumnType("date");

                entity.Property(e => e.NguoiPhuThuoc).HasMaxLength(50);

                entity.Property(e => e.QuanHe).HasMaxLength(100);

                entity.Property(e => e.SoDt)
                    .HasMaxLength(50)
                    .HasColumnName("SoDT");
            });

            modelBuilder.Entity<TblGroupUser>(entity =>
            {
                entity.ToTable("tblGroupUser");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.Descriptions).HasMaxLength(500);

                entity.Property(e => e.GroupName).HasMaxLength(50);

                entity.Property(e => e.ShortDescriptions).HasMaxLength(50);
            });

            modelBuilder.Entity<TblHopDong>(entity =>
            {
                entity.ToTable("tblHopDong");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.GhiChu).HasMaxLength(500);

                entity.Property(e => e.LanTaiKy).HasMaxLength(50);

                entity.Property(e => e.LoaiHopDong)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NgayBatDau).HasColumnType("date");

                entity.Property(e => e.NgayHetHan).HasColumnType("date");

                entity.Property(e => e.NgayKy).HasColumnType("date");

                entity.Property(e => e.NguoiKy).HasMaxLength(500);

                entity.Property(e => e.SoHopDong)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TblKhenThuongKyLuat>(entity =>
            {
                entity.ToTable("tblKhenThuongKyLuat");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.GhiChu).HasMaxLength(500);

                entity.Property(e => e.HinhThuc).HasMaxLength(50);

                entity.Property(e => e.Ngay).HasColumnType("date");

                entity.Property(e => e.NoiDung).HasMaxLength(150);

                entity.Property(e => e.SoQd)
                    .HasMaxLength(150)
                    .HasColumnName("SoQD");

                entity.Property(e => e.ThoiHanApDung).HasMaxLength(150);
            });

            modelBuilder.Entity<TblLogPoint>(entity =>
            {
                entity.ToTable("tblLogPoint");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Cardnumber).HasMaxLength(50);

                entity.Property(e => e.Ngaythaotac).HasColumnType("datetime");

                entity.Property(e => e.Nguoithaotac).HasMaxLength(50);
            });

            modelBuilder.Entity<TblLuong>(entity =>
            {
                entity.ToTable("tblLuong");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DenNgay).HasColumnType("date");

                entity.Property(e => e.LuongCb).HasColumnName("LuongCB");

                entity.Property(e => e.LyDo).HasMaxLength(4000);

                entity.Property(e => e.TuNgay).HasColumnType("date");
            });

            modelBuilder.Entity<TblLuongKhac>(entity =>
            {
                entity.ToTable("tblLuongKhac");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DenNgay).HasColumnType("date");

                entity.Property(e => e.TuNgay).HasColumnType("date");
            });

            modelBuilder.Entity<TblMenu>(entity =>
            {
                entity.ToTable("tbl_Menu");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.IdMenu)
                    .HasMaxLength(50)
                    .HasColumnName("ID_Menu");

                entity.Property(e => e.IdSubMenu1)
                    .HasMaxLength(50)
                    .HasColumnName("ID_SubMenu1");

                entity.Property(e => e.IdSubMenu2)
                    .HasMaxLength(50)
                    .HasColumnName("ID_SubMenu2");

                entity.Property(e => e.MenuName).HasMaxLength(500);

                entity.Property(e => e.SubMenuName1).HasMaxLength(500);

                entity.Property(e => e.SubMenuName2).HasMaxLength(500);
            });

            modelBuilder.Entity<TblMenu1>(entity =>
            {
                entity.ToTable("tblMenu");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.Descriptions).HasMaxLength(500);

                entity.Property(e => e.MenuName).HasMaxLength(500);
            });

            modelBuilder.Entity<TblNgayNghi>(entity =>
            {
                entity.HasKey(e => new { e.CardNumber, e.Nam });

                entity.ToTable("tblNgayNghi");

                entity.Property(e => e.CardNumber).HasMaxLength(50);
            });

            modelBuilder.Entity<TblNgayle>(entity =>
            {
                entity.ToTable("tblNgayle");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Manghi).HasMaxLength(10);

                entity.Property(e => e.Mota).HasMaxLength(250);

                entity.Property(e => e.Ngaynghilam).HasColumnType("date");
            });

            modelBuilder.Entity<TblNghiPhep>(entity =>
            {
                entity.HasKey(e => e.MaPhieu);

                entity.ToTable("tblNghiPhep");

                entity.Property(e => e.MaPhieu).HasMaxLength(50);

                entity.Property(e => e.DenNgay).HasColumnType("date");

                entity.Property(e => e.EmailNguoiDuyet).HasMaxLength(500);

                entity.Property(e => e.GhiChuNguoiDuyet).HasMaxLength(500);

                entity.Property(e => e.LoaiNghi).HasMaxLength(50);

                entity.Property(e => e.MaNguoiDuyet).HasMaxLength(50);

                entity.Property(e => e.MaNv).HasColumnName("MaNV");

                entity.Property(e => e.NgayLamLai).HasColumnType("date");

                entity.Property(e => e.NoiDung).HasMaxLength(50);

                entity.Property(e => e.TimeCreate).HasMaxLength(50);

                entity.Property(e => e.TimeUpdate).HasMaxLength(50);

                entity.Property(e => e.TrangThai).HasMaxLength(50);

                entity.Property(e => e.TuNgay).HasColumnType("date");
            });

            modelBuilder.Entity<TblNhanVien>(entity =>
            {
                entity.HasKey(e => e.CardNumber);

                entity.ToTable("tblNhanVien");

                entity.Property(e => e.CardNumber).HasMaxLength(50);

                entity.Property(e => e.Cccd)
                    .HasMaxLength(50)
                    .HasColumnName("CCCD");

                entity.Property(e => e.ChieuCao).HasMaxLength(20);

                entity.Property(e => e.ChucVu).HasMaxLength(50);

                entity.Property(e => e.DanToc).HasMaxLength(50);

                entity.Property(e => e.Dkhk)
                    .HasMaxLength(1000)
                    .HasColumnName("DKHK");

                entity.Property(e => e.Email).HasMaxLength(500);

                entity.Property(e => e.Email2).HasMaxLength(500);

                entity.Property(e => e.GioiTinh).HasMaxLength(50);

                entity.Property(e => e.HoTen).HasMaxLength(50);

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Idcapbac).HasColumnName("idcapbac");

                entity.Property(e => e.IdcongTy).HasColumnName("IDCongTy");

                entity.Property(e => e.Idnhomquyen).HasColumnName("idnhomquyen");

                entity.Property(e => e.IdphongBan)
                    .HasMaxLength(50)
                    .HasColumnName("IDPhongBan");

                entity.Property(e => e.LanCuoiChinhSua).HasMaxLength(50);

                entity.Property(e => e.LoaiDongThue).HasMaxLength(50);

                entity.Property(e => e.LoaiHopDong).HasMaxLength(50);

                entity.Property(e => e.Luonggop).HasColumnName("luonggop");

                entity.Property(e => e.MaSoThue).HasMaxLength(50);

                entity.Property(e => e.MembershipId)
                    .HasMaxLength(50)
                    .HasColumnName("membership_id");

                entity.Property(e => e.NgayCap).HasColumnType("date");

                entity.Property(e => e.NgaySinh).HasColumnType("date");

                entity.Property(e => e.NgayVaoCongTy).HasColumnType("date");

                entity.Property(e => e.Ngaynghiviec)
                    .HasColumnType("date")
                    .HasColumnName("ngaynghiviec");

                entity.Property(e => e.NhomMau).HasMaxLength(20);

                entity.Property(e => e.NoiCap).HasMaxLength(500);

                entity.Property(e => e.NoiDkbhxh)
                    .HasMaxLength(250)
                    .HasColumnName("noiDKBHXH");

                entity.Property(e => e.SdtKhanCap).HasMaxLength(20);

                entity.Property(e => e.SoBhxh)
                    .HasMaxLength(50)
                    .HasColumnName("soBHXH");

                entity.Property(e => e.SoCmnd)
                    .HasMaxLength(50)
                    .HasColumnName("SoCMND");

                entity.Property(e => e.SoDt)
                    .HasMaxLength(20)
                    .HasColumnName("SoDT");

                entity.Property(e => e.SoTaiKhoanNh)
                    .HasMaxLength(50)
                    .HasColumnName("SoTaiKhoanNH");

                entity.Property(e => e.ThuongTru).HasMaxLength(500);

                entity.Property(e => e.TrangThai).HasMaxLength(50);

                entity.Property(e => e.Vitri).HasMaxLength(500);
            });

            modelBuilder.Entity<TblNhanVienImg>(entity =>
            {
                entity.ToTable("tblNhanVien_IMG");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Avatar).HasMaxLength(150);

                entity.Property(e => e.HinhCmnd)
                    .HasMaxLength(150)
                    .HasColumnName("HinhCMND");

                entity.Property(e => e.IdNhanVien).HasColumnName("idNhanVien");

                entity.Property(e => e.LanCuoiChinhSua).HasMaxLength(30);

                entity.Property(e => e.ThoiGianTao).HasMaxLength(30);
            });

            modelBuilder.Entity<TblPermissions>(entity =>
            {
                entity.ToTable("tblPermissions");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.Descriptions).HasMaxLength(500);

                entity.Property(e => e.Permissions).HasMaxLength(50);

                entity.Property(e => e.SortDescriptions).HasMaxLength(50);
            });

            modelBuilder.Entity<TblPhong>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.IdcongTy });

                entity.ToTable("tblPhong");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.IdcongTy).HasColumnName("IDCongTy");

                entity.Property(e => e.GhiChu).HasMaxLength(500);

                entity.Property(e => e.TenPhong).HasMaxLength(500);
            });

            modelBuilder.Entity<TblPhucLoi>(entity =>
            {
                entity.ToTable("tblPhucLoi");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.LoaiHopDong).HasMaxLength(50);

                entity.Property(e => e.NgayThuong).HasColumnType("date");
            });

            modelBuilder.Entity<TblQuaTrinhCongTac>(entity =>
            {
                entity.ToTable("tblQuaTrinhCongTac");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber).HasMaxLength(50);

                entity.Property(e => e.ChucVu).HasMaxLength(50);

                entity.Property(e => e.DenNam).HasColumnType("date");

                entity.Property(e => e.TenCty).HasMaxLength(500);

                entity.Property(e => e.TuNam).HasColumnType("date");
            });

            modelBuilder.Entity<TblQuaTrinhCongViec>(entity =>
            {
                entity.HasKey(e => new { e.CardNumber, e.Stt });

                entity.ToTable("tblQuaTrinhCongViec");

                entity.Property(e => e.CardNumber).HasMaxLength(50);

                entity.Property(e => e.Stt).HasColumnName("STT");

                entity.Property(e => e.ChucVu).HasMaxLength(50);

                entity.Property(e => e.DenNgay).HasColumnType("date");

                entity.Property(e => e.GhiChu).HasMaxLength(500);

                entity.Property(e => e.KhenThuong).HasMaxLength(500);

                entity.Property(e => e.KyLuat).HasMaxLength(500);

                entity.Property(e => e.TuNgay).HasColumnType("date");
            });

            modelBuilder.Entity<TblQuaTrinhCongViecNew>(entity =>
            {
                entity.ToTable("tblQuaTrinhCongViec_new");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ChucVu).HasMaxLength(50);

                entity.Property(e => e.DenNgay).HasColumnType("date");

                entity.Property(e => e.DiaDiemLv)
                    .HasMaxLength(500)
                    .HasColumnName("DiaDiemLV");

                entity.Property(e => e.GhiChu).HasMaxLength(500);

                entity.Property(e => e.PhongBan).HasMaxLength(500);

                entity.Property(e => e.TuNgay).HasColumnType("date");
            });

            modelBuilder.Entity<TblQuaTrinhDaoTao>(entity =>
            {
                entity.ToTable("tblQuaTrinhDaoTao");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DiaDiem).HasMaxLength(250);

                entity.Property(e => e.GhiChu).HasMaxLength(250);

                entity.Property(e => e.Kq)
                    .HasMaxLength(50)
                    .HasColumnName("KQ");

                entity.Property(e => e.Ngay).HasColumnType("date");

                entity.Property(e => e.NhanXetDanhGia).HasMaxLength(150);

                entity.Property(e => e.NoiDungDt)
                    .HasMaxLength(150)
                    .HasColumnName("NoiDungDT");

                entity.Property(e => e.ThoHanCamKet).HasMaxLength(150);

                entity.Property(e => e.ThoiGianDt)
                    .HasMaxLength(500)
                    .HasColumnName("ThoiGianDT");
            });

            modelBuilder.Entity<TblQuaTrinhHocTap>(entity =>
            {
                entity.ToTable("tblQuaTrinhHocTap");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BangTotNghiep).HasMaxLength(50);

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ChuyenNganh).HasMaxLength(500);

                entity.Property(e => e.DenNgay).HasColumnType("date");

                entity.Property(e => e.LoaiTotNghiep).HasMaxLength(50);

                entity.Property(e => e.TrinhDo).HasMaxLength(50);

                entity.Property(e => e.Truong).HasMaxLength(500);

                entity.Property(e => e.TuNgay).HasColumnType("date");
            });

            modelBuilder.Entity<TblScheduler>(entity =>
            {
                entity.ToTable("tblScheduler");

                entity.Property(e => e.Color)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.End).HasColumnType("datetime");

                entity.Property(e => e.GhiChuNguoiDuyet).HasMaxLength(500);

                entity.Property(e => e.LoaiNghi).HasMaxLength(50);

                entity.Property(e => e.NoiDung).HasMaxLength(50);

                entity.Property(e => e.Note).HasMaxLength(2000);

                entity.Property(e => e.Recurrence)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Start).HasColumnType("datetime");

                entity.Property(e => e.TimeApprove).HasColumnType("datetime");

                entity.Property(e => e.TimeCreate).HasColumnType("datetime");

                entity.Property(e => e.TimeUpdate).HasColumnType("datetime");

                entity.Property(e => e.TrangThai).HasMaxLength(50);
            });

            modelBuilder.Entity<TblSubMenu>(entity =>
            {
                entity.HasKey(e => new { e.Id, e.IdMenu });

                entity.ToTable("tblSubMenu");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.IdMenu)
                    .HasMaxLength(50)
                    .HasColumnName("ID_Menu");

                entity.Property(e => e.Descriptions).HasMaxLength(500);

                entity.Property(e => e.SubMenuName).HasMaxLength(500);
            });

            modelBuilder.Entity<TblSubMenu2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tblSubMenu2");

                entity.Property(e => e.Descriptions).HasMaxLength(500);

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.IdSubMenu)
                    .HasMaxLength(50)
                    .HasColumnName("ID_SubMenu");

                entity.Property(e => e.SubMenuName)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<TblTaiSanCap>(entity =>
            {
                entity.ToTable("tblTaiSanCap");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DonViTinh).HasMaxLength(50);

                entity.Property(e => e.GhiChu).HasMaxLength(500);

                entity.Property(e => e.TenTs)
                    .HasMaxLength(500)
                    .HasColumnName("TenTS");

                entity.Property(e => e.TraTaiSan).HasMaxLength(50);
            });

            modelBuilder.Entity<TblTangCa>(entity =>
            {
                entity.HasKey(e => new { e.CardNumber, e.Thang })
                    .HasName("PK_tblNgayCong_1");

                entity.ToTable("tblTangCa");

                entity.Property(e => e.CardNumber).HasMaxLength(50);

                entity.Property(e => e.Thang).HasColumnType("date");

                entity.Property(e => e.Giolamch).HasColumnName("giolamch");

                entity.Property(e => e.Giolamch22).HasColumnName("giolamch22");

                entity.Property(e => e.Giolamch22le).HasColumnName("giolamch22le");

                entity.Property(e => e.Giolamch22letv).HasColumnName("giolamch22letv");

                entity.Property(e => e.Giolamch22tv).HasColumnName("giolamch22tv");

                entity.Property(e => e.Giolamchtv).HasColumnName("giolamchtv");

                entity.Property(e => e.Ngathuong22).HasColumnName("ngathuong22");

                entity.Property(e => e.Ngathuong22tv).HasColumnName("ngathuong22tv");

                entity.Property(e => e.Ngayle).HasColumnName("ngayle");

                entity.Property(e => e.Ngayle22).HasColumnName("ngayle22");

                entity.Property(e => e.Ngayle22tv).HasColumnName("ngayle22tv");

                entity.Property(e => e.Ngayletv).HasColumnName("ngayletv");

                entity.Property(e => e.Ngayoff).HasColumnName("ngayoff");

                entity.Property(e => e.Ngayoff22h).HasColumnName("ngayoff22h");

                entity.Property(e => e.Ngayoff22htv).HasColumnName("ngayoff22htv");

                entity.Property(e => e.Ngayofftv).HasColumnName("ngayofftv");

                entity.Property(e => e.Ngaythuong).HasColumnName("ngaythuong");

                entity.Property(e => e.Ngaythuongtv).HasColumnName("ngaythuongtv");
            });

            modelBuilder.Entity<TblTapDoan>(entity =>
            {
                entity.ToTable("tblTapDoan");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .HasColumnName("ID");

                entity.Property(e => e.DiaChi).HasMaxLength(500);

                entity.Property(e => e.TenTapDoan).HasMaxLength(500);
            });

            modelBuilder.Entity<TblTroCap>(entity =>
            {
                entity.ToTable("tblTroCap");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DenNgay).HasColumnType("date");

                entity.Property(e => e.GhiChu).HasMaxLength(500);

                entity.Property(e => e.TuNgay).HasColumnType("date");
            });

            modelBuilder.Entity<TblTrocaptrachnhiem>(entity =>
            {
                entity.ToTable("tblTrocaptrachnhiem");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CardNumber).HasMaxLength(50);

                entity.Property(e => e.Denngay)
                    .HasColumnType("date")
                    .HasColumnName("denngay");

                entity.Property(e => e.Ghichu)
                    .HasMaxLength(255)
                    .HasColumnName("ghichu");

                entity.Property(e => e.Trocapkhac).HasColumnName("trocapkhac");

                entity.Property(e => e.Trocaptrachnhiem).HasColumnName("trocaptrachnhiem");

                entity.Property(e => e.Tungay)
                    .HasColumnType("date")
                    .HasColumnName("tungay");
            });

            modelBuilder.Entity<Thietlapbaohiem>(entity =>
            {
                entity.ToTable("thietlapbaohiem");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Bhtncty).HasColumnName("BHTNcty");

                entity.Property(e => e.Bhtnnv).HasColumnName("BHTNnv");

                entity.Property(e => e.Bhxhcty).HasColumnName("BHXHcty");

                entity.Property(e => e.Bhxhnv).HasColumnName("BHXHnv");

                entity.Property(e => e.Bhytcty).HasColumnName("BHYTcty");

                entity.Property(e => e.Bhytnv).HasColumnName("BHYTnv");

                entity.Property(e => e.Ngayhieuluc)
                    .HasColumnType("date")
                    .HasColumnName("ngayhieuluc");
            });

            modelBuilder.Entity<Thietlapthue>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Ngayhieuluc).HasColumnType("date");

                entity.Property(e => e.Tendinhmuc).HasMaxLength(50);
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingGeneratedFunctions(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}